{"version":3,"sources":["src/models/Model.ts","src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;AEAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AFsBA,IAAA,KAAA;AEpBA,AFoBA,IEpBM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,AFoBxB,EEpBwB,EAAE,EAAE,CAAN,KFoBtB;AEpB+B,AFqB7B,EErB6B,IAAI,EAAE,GFqBnC,KAAA,CACU,GEtBU,OFqBpB,EAEU,MAFV,EAGU,IAHV,EAGuB;AExB0B,AFsBvC,EEtBuC,GAAG,EAAE,EFsB5C,UAAA,GAAA,UAAA;AEtBU,AFuBV,CEvBC,CAAb,OFuBY,MAAA,GAAA,MAAA;AErBZ,AFsBY,IEtBR,CAAC,EAAL,CAAQ,CFsBI,IAAA,CEtBZ,EAAgB,AFsBJ,IAAA,QEtBI;AACd,AFsBI,EEtBJ,OAAO,CAAC,GAAR,CAAY,IAAZ;AACD,CAFD;AAIA,AFqBE,EAAA,EErBE,CAAC,GFqBH,CErBF,AFqBE,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,IAAJ,EAAM;SAAN,eAAA;AACE,aAAO,KAAK,MAAL,CAAY,EAAnB;AACD,KAFK;qBAAA;;AAAA,GAAN;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,eAAA;AACE,aAAO,KAAK,MAAL,CAAY,OAAnB;AACD,KAFU;qBAAA;;AAAA,GAAX;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,KAAJ,EAAO;SAAP,eAAA;AACE,aAAO,KAAK,UAAL,CAAgB,GAAvB;AACD,KAFM;qBAAA;ACrCT,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;ADqCS,GAAP;AC7BF,IAAM,OAAO,GAAG,6BAAhB;ADiCE,EAAA,KAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAa;AACX,AChCJ,IAAA,IAAA,CDgCS,UAAL,CAAgB,GAAhB,CAAoB,MAApB;AACA,ACjCJ,SDiCS,MAAL,CAAY,OAAZ,CAAoB,QAApB;AACD,AClCH,GD+BE,OC/BF,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;ADoCxB,EAAA,KAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AAAA,ACpCF,QDoCE,GCpCF,EDoCE,ECpCF,CDoCE,ECpCF,EDoCE;;AACE,ACrCyC,QDqCnC,EAAE,GAAG,KAAK,GAAL,CAAS,IAAT,CAAX;;AACA,ACtCwC,QDsCpC,CCtCoC,IAAA,EDsC7B,EAAP,KAAc,QAAlB,EAA4B;AAC1B,ACvCN,CAAA,CAA0B,OAAA,CAAA,EDuCd,GCvCZ,CDuCgB,ACvChB,KDuCY,CAAU,4BAAV,CAAN;AACD;ACxCQ,OAAA,CAAA,IAAA,GAAA,IAAA;AD0CT,SAAK,IAAL,CAAU,KAAV,CAAgB,EAAhB,EAAoB,IAApB,CAAyB,UAAC,QAAD,EAAwB;AAC/C,MAAA,KAAI,CAAC,GAAL,CAAS,QAAQ,CAAC,IAAlB;AACD,KAFD;AAGD,GATD;;AAWA,EAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,IAAL,CACG,IADH,CACQ,KAAK,UAAL,CAAgB,MAAhB,EADR,EAEG,IAFH,CAEQ,UAAC,QAAD,EAAwB;AAC5B,MAAA,KAAI,CAAC,OAAL,CAAa,MAAb;AACD,KAJH,EAKG,KALH,CAKS,YAAA;AACL,MAAA,KAAI,CAAC,OAAL,CAAa,OAAb;AACD,KAPH;AAQD,GATD;;AAUF,SAAA,KAAA;AA7CA,CAAA,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { AxiosPromise, AxiosResponse } from \"axios\";\r\n\r\ninterface ModelAttributes<T> {\r\n  get<K extends keyof T>(key: K): T[K];\r\n  set(value: T): void;\r\n  getAll(): T;\r\n}\r\n\r\ninterface Sync<T> {\r\n  fetch(id: number): AxiosPromise;\r\n  save(data: T): AxiosPromise;\r\n}\r\n\r\ninterface Events {\r\n  on(eventName: string, callback: () => void): void;\r\n  trigger(eventName: string): void;\r\n}\r\n\r\ninterface HasId {\r\n  id?: number;\r\n}\r\n\r\nexport class Model<T extends HasId> {\r\n  constructor(\r\n    private attributes: ModelAttributes<T>,\r\n    private events: Events,\r\n    private sync: Sync<T>\r\n  ) {}\r\n\r\n  get on() {\r\n    return this.events.on;\r\n  }\r\n\r\n  get trigger() {\r\n    return this.events.trigger;\r\n  }\r\n\r\n  get get() {\r\n    return this.attributes.get;\r\n  }\r\n\r\n  set(update: T): void {\r\n    this.attributes.set(update);\r\n    this.events.trigger(\"change\");\r\n  }\r\n\r\n  fetch(): void {\r\n    const id = this.get(\"id\");\r\n    if (typeof id !== \"number\") {\r\n      throw new Error(\"Cannot fetch without an id\");\r\n    }\r\n\r\n    this.sync.fetch(id).then((response: AxiosResponse): void => {\r\n      this.set(response.data);\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.sync\r\n      .save(this.attributes.getAll())\r\n      .then((response: AxiosResponse): void => {\r\n        this.trigger(\"save\");\r\n      })\r\n      .catch(() => {\r\n        this.trigger(\"error\");\r\n      });\r\n  }\r\n}\r\n","import { Model } from \"./Model\";\r\n\r\nexport interface UserProps {\r\n  id?: number;\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\nconst rootUrl = \"http://localhost:3000/users\";\r\n\r\nexport class User extends Model<UserProps> {}\r\n","import { User } from \"./models/User\";\r\n\r\nconst user = new User({ id: 1, name: \"newer name\", age: 0 });\r\n\r\nuser.on(\"save\", () => {\r\n  console.log(user);\r\n});\r\n\r\nuser.save();\r\n"]}